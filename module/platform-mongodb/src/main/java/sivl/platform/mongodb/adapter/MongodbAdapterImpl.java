package sivl.platform.mongodb.adapter;import java.util.Date;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import sivl.platform.common.adapter.MongodbAdapter;import sivl.platform.common.constant.LogEnum;import sivl.platform.common.model.CommonModel;import sivl.platform.common.utils.JSONUtil;import sivl.platform.mongodb.model.BuzLogModel;import sivl.platform.mongodb.model.NetLogModel;import sivl.platform.mongodb.service.MongodbService;/** * mongodb适配服务 * 目的： * @author lixuefeng * @createTime 2015年12月9日 * @version 1.0 */@Service("mongodbAdapter")public class MongodbAdapterImpl implements MongodbAdapter {		@Autowired	private MongodbService mongodbService;	/**	 * 保存日志信息	 * @param logEnum	 * @param content	 */	@Override	public void saveLog(LogEnum logEnum,String content){		try {			@SuppressWarnings("unchecked")			Class<CommonModel> claz = (Class<CommonModel>) Class.forName(logEnum.getClassPath());			CommonModel logObject = JSONUtil.json2Object(content, claz);			this.insertLog(logEnum, logObject);		} catch (ClassNotFoundException e) {			e.printStackTrace();		}	}		/**	 * 插入数据	 * @param logEnum	 * @param logObject	 */	private void insertLog(LogEnum logEnum,CommonModel logObject){		//如果为请求		if(LogEnum.NET_LOG.getCode().equals(logEnum.getParentCode())){			NetLogModel netLogModel = (NetLogModel) logObject;			netLogModel.setLogType(logEnum.getCode());			netLogModel.setAddTime(new Date());			mongodbService.saveNetLog(netLogModel);			return;		}		BuzLogModel buzLogModel = (BuzLogModel) logObject;		buzLogModel.setLogType(logEnum.getCode());		buzLogModel.setAddTime(new Date());		mongodbService.saveBuzLog(buzLogModel);	}}