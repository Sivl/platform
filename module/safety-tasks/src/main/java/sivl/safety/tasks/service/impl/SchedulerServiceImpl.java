package sivl.safety.tasks.service.impl;import java.util.UUID;import javax.annotation.Resource;import sivl.platform.common.constant.Constant;import org.quartz.CronScheduleBuilder;import org.quartz.JobDetail;import org.quartz.JobKey;import org.quartz.Scheduler;import org.quartz.SchedulerException;import org.quartz.TriggerKey;import org.quartz.spi.MutableTrigger;import sivl.safety.tasks.model.SchedulerModel;import sivl.safety.tasks.model.SimpleTriggerModel;import sivl.safety.tasks.service.SchedulerService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.util.StringUtils;/** * 计划任务调度服务实现 *  * @author lixuefeng * @createTime 2015年11月21日 * @version 1.0 */public class SchedulerServiceImpl implements SchedulerService {	@Resource	private JobDetail jobDetail;	@Autowired	private Scheduler quartzScheduler;	@Override	public void schedule(SchedulerModel chedulerBean) {		// 任务调度默认名Constant		String defalueJobName = UUID.randomUUID().toString();		String groupName = StringUtils.isEmpty(chedulerBean.getGroupName()) ? Constant.DEFALUE_TASK_GROUP.getValue() : chedulerBean.getGroupName();		try {			quartzScheduler.addJob(jobDetail, true);			MutableTrigger cronTrigger = CronScheduleBuilder.cronSchedule(					chedulerBean.getCronExpression()).build();			cronTrigger.setKey(TriggerKey.triggerKey(StringUtils					.isEmpty(chedulerBean.getJobName()) ? defalueJobName					: chedulerBean.getJobName(), groupName));			cronTrigger.setJobKey(JobKey.jobKey(jobDetail.getKey().getName(),					groupName));			cronTrigger.setDescription(chedulerBean.getDescription());			quartzScheduler.scheduleJob(cronTrigger);			quartzScheduler.rescheduleJob(cronTrigger.getKey(), cronTrigger);		} catch (SchedulerException e) {			throw new RuntimeException(e);		}	}	@Override	public void schedule(SimpleTriggerModel simpleTriggerBean) {		String name = UUID.randomUUID().toString();		System.out.println(name);	}	@Override	public void removeSchedule(SchedulerModel chedulerBean) {		try {  			quartzScheduler.pauseTrigger(TriggerKey.triggerKey(chedulerBean.getJobName(), chedulerBean.getGroupName()));//停止触发器			quartzScheduler.unscheduleJob(TriggerKey.triggerKey(chedulerBean.getJobName(), chedulerBean.getGroupName()));//移除触发器			quartzScheduler.deleteJob(JobKey.jobKey(chedulerBean.getJobName(), chedulerBean.getGroupName()));//移除工作	    } catch (SchedulerException e) {  	        e.printStackTrace();  	    }  	}	}