package sivl.platform.common.filter;import java.lang.reflect.Method;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.web.method.HandlerMethod;import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;import sivl.platform.common.annotation.Resubmit;import sivl.platform.common.model.NetLogModel;import sivl.platform.common.utils.JSONUtil;import sivl.platform.common.utils.LogUtil;import sivl.platform.common.utils.TokenProcessorUtil;/** * 重复提交过滤器 * @author lixuefeng * @createTime 2015年11月21日 * @version 1.0 */public class ResubmitHandlerInterceptor extends HandlerInterceptorAdapter  {	private static String className = "sivl.platform.common.filter.ResubmitHandlerInterceptor";		@Override	public boolean preHandle(HttpServletRequest request,			HttpServletResponse response, Object handler) throws Exception {				if(!(handler instanceof HandlerMethod)){			return true;		}		HandlerMethod handlerMethod = (HandlerMethod) handler;        Method method = handlerMethod.getMethod();        //重复提交注解        Resubmit annotation = method.getAnnotation(Resubmit.class);        if (annotation != null) {            boolean needSaveSession = annotation.needSaveToken();            if (needSaveSession) {                //保存session            	TokenProcessorUtil.getInstance().saveToken(request);            }            boolean needRemoveSession = annotation.needRemoveToken();            if (needRemoveSession) {            	//是否重复提交                if (!TokenProcessorUtil.getInstance().isTokenValid(request)) {                	LogUtil.netResubmitLog(JSONUtil.obj2json(new NetLogModel(request).buildClassName(className).buildInterfaceName(request.getRequestURI()).buildMsg("重复提交！")), ResubmitHandlerInterceptor.class);                    return false;                }                //移除session                TokenProcessorUtil.getInstance().resetToken(request);            }        }        return true;	}	}