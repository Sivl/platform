package sivl.platform.file.model;import java.io.Serializable;import sivl.platform.file.cmd.AbstractCmd;import sivl.platform.file.utils.BityUtils;/** * 文件分组信息载体 * 目的： * @author lixuefeng * @date 2016年1月7日 * @version 1.0 */public class FileGroupInfoModel implements Serializable {	private static final long serialVersionUID = 1L;	private String groupName; 		// name of this group	private long totalMB;			// total disk storage in MB	private long freeMB; 			// free disk space in MB	private long trunkFreeMB; 		// trunk free space in MB	private int storageCount; 		// storage server count	private int storagePort; 		// storage server port	private int storageHttpPort; 	// storage server HTTP port	private int activeCount; 		// active storage server count	private int currentWriteServer; // current storage server index to upload file	private int storePathCount; 	// store base path count of each storage server	private int subdirCountPerPath; // sub dir count per store path	private int currentTrunkFileId; // current trunk file id	public final static int BYTE_SIZE = 105;		public FileGroupInfoModel(byte[] data,int offset) {		super();		groupName = new String(data, offset, AbstractCmd.FDFS_GROUP_NAME_MAX_LEN+1).trim();		offset +=  AbstractCmd.FDFS_GROUP_NAME_MAX_LEN+1;		totalMB = BityUtils.buff2long(data, offset);		offset += 8;		freeMB = BityUtils.buff2long(data, offset);		offset += 8;		trunkFreeMB = BityUtils.buff2long(data, offset);		offset += 8;		storageCount = BityUtils.buff2int(data, offset);		offset += 8;		storagePort = BityUtils.buff2int(data, offset);		offset += 8;		storageHttpPort = BityUtils.buff2int(data, offset);		offset += 8;		activeCount = BityUtils.buff2int(data, offset);		offset += 8;		currentWriteServer = BityUtils.buff2int(data, offset);		offset += 8;		storePathCount = BityUtils.buff2int(data, offset);		offset += 8;		subdirCountPerPath = BityUtils.buff2int(data, offset);		offset += 8;		currentTrunkFileId = BityUtils.buff2int(data, offset);	}		public String getGroupName() {		return groupName;	}	public void setGroupName(String groupName) {		this.groupName = groupName;	}	public long getTotalMB() {		return totalMB;	}	public void setTotalMB(long totalMB) {		this.totalMB = totalMB;	}	public long getFreeMB() {		return freeMB;	}	public void setFreeMB(long freeMB) {		this.freeMB = freeMB;	}	public long getTrunkFreeMB() {		return trunkFreeMB;	}	public void setTrunkFreeMB(long trunkFreeMB) {		this.trunkFreeMB = trunkFreeMB;	}	public int getStorageCount() {		return storageCount;	}	public void setStorageCount(int storageCount) {		this.storageCount = storageCount;	}	public int getStoragePort() {		return storagePort;	}	public void setStoragePort(int storagePort) {		this.storagePort = storagePort;	}	public int getStorageHttpPort() {		return storageHttpPort;	}	public void setStorageHttpPort(int storageHttpPort) {		this.storageHttpPort = storageHttpPort;	}	public int getActiveCount() {		return activeCount;	}	public void setActiveCount(int activeCount) {		this.activeCount = activeCount;	}	public int getCurrentWriteServer() {		return currentWriteServer;	}	public void setCurrentWriteServer(int currentWriteServer) {		this.currentWriteServer = currentWriteServer;	}	public int getStorePathCount() {		return storePathCount;	}	public void setStorePathCount(int storePathCount) {		this.storePathCount = storePathCount;	}	public int getSubdirCountPerPath() {		return subdirCountPerPath;	}	public void setSubdirCountPerPath(int subdirCountPerPath) {		this.subdirCountPerPath = subdirCountPerPath;	}	public int getCurrentTrunkFileId() {		return currentTrunkFileId;	}	public void setCurrentTrunkFileId(int currentTrunkFileId) {		this.currentTrunkFileId = currentTrunkFileId;	}	@Override	public String toString() {		return "FileGroupInfoModel [groupName=" + groupName + ", totalMB="				+ totalMB + ", freeMB=" + freeMB + ", trunkFreeMB="				+ trunkFreeMB + ", storageCount=" + storageCount				+ ", storagePort=" + storagePort + ", storageHttpPort="				+ storageHttpPort + ", activeCount=" + activeCount				+ ", currentWriteServer=" + currentWriteServer				+ ", storePathCount=" + storePathCount				+ ", subdirCountPerPath=" + subdirCountPerPath				+ ", currentTrunkFileId=" + currentTrunkFileId + "]";	}}