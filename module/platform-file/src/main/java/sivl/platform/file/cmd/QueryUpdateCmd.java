package sivl.platform.file.cmd;import java.io.IOException;import java.net.Socket;import java.util.Arrays;import sivl.platform.file.model.FileResultModel;import sivl.platform.file.utils.BityUtils;/** * 查询上传命令 * 目的： * @author lixuefeng * @date 2016年1月7日 * @version 1.0 */public class QueryUpdateCmd extends AbstractCmd<String> {	public QueryUpdateCmd(String group,String fileName) {		super();		byte[] groupByte = group.getBytes(charset);		int group_len = groupByte.length;		if (group_len > FDFS_GROUP_NAME_MAX_LEN) {			group_len = FDFS_GROUP_NAME_MAX_LEN;		}		byte[] fileNameByte = fileName.getBytes(charset);		body = new byte[FDFS_GROUP_NAME_MAX_LEN + fileNameByte.length];		Arrays.fill(body, (byte) 0);		System.arraycopy(groupByte, 0, body, 0, group_len);		System.arraycopy(fileNameByte, 0, body, FDFS_GROUP_NAME_MAX_LEN, fileNameByte.length);		this.requestCmd = TRACKER_PROTO_CMD_SERVICE_QUERY_UPDATE;		this.responseCmd = TRACKER_PROTO_CMD_RESP;		this.responseSize = TRACKER_QUERY_STORAGE_FETCH_BODY_LEN;	}		@Override	public FileResultModel<String> exec(Socket socket) throws IOException {		request(socket.getOutputStream());		Response response = response(socket.getInputStream());		if(response.isSuccess()){			byte[] data = response.getData();			String ip = new String(data,FDFS_GROUP_NAME_MAX_LEN,FDFS_IPADDR_SIZE - 1).trim();			int port = (int) BityUtils.buff2long(data, FDFS_GROUP_NAME_MAX_LEN + FDFS_IPADDR_SIZE - 1);			FileResultModel<String> result = new FileResultModel<String>(response.getCode());			result.setData(ip + ":" + String.valueOf(port));			return result;		}		else{			FileResultModel<String> result = new FileResultModel<String>(response.getCode());			result.setMessage("Error");			return result;		}	}}