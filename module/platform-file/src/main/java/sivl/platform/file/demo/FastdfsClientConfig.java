package sivl.platform.file.demo;import java.util.ArrayList;import java.util.List;import org.apache.commons.configuration.Configuration;import org.apache.commons.configuration.ConfigurationException;import org.apache.commons.configuration.PropertiesConfiguration;import org.apache.commons.pool2.impl.GenericKeyedObjectPoolConfig;public class FastdfsClientConfig {		public static final int DEFAULT_CONNECT_TIMEOUT = 5; // 以秒为单位	public static final int DEFAULT_NETWORK_TIMEOUT = 30; // 以秒为单位		public static int connectTimeout = DEFAULT_CONNECT_TIMEOUT * 1000;	public static int networkTimeout = DEFAULT_NETWORK_TIMEOUT * 1000;	private static List<String> trackerAddrs = new ArrayList<String>();	private final static String configFile = "FastdfsClient.properties"; //配置文件名这里是固定格式	public static String trackerServer="127.0.0.1:22122";	public static String fileServer = "127.0.0.1:80";	  	static{		String conf = FastdfsClientConfig.class.getClassLoader().getResource(configFile).getPath();		try {			Configuration config = new PropertiesConfiguration(conf);			connectTimeout = config.getInt("connect_timeout", DEFAULT_CONNECT_TIMEOUT)*1000;			networkTimeout = config.getInt("network_timeout", DEFAULT_NETWORK_TIMEOUT)*1000;			fileServer = config.getString("file_server");			List<Object> trackerServers = config.getList("tracker_server");			for(Object trackerServer:trackerServers){				trackerAddrs.add((String)trackerServer);			}		} catch (ConfigurationException e) {			e.printStackTrace();		}			}			public FastdfsClientConfig() {			}		/**	 * 	 * @author liuli	 * @creationDate 2015年5月22日 下午2:28:40	 * @param configFile 配置文件路径	 * @throws ConfigurationException	 */	public FastdfsClientConfig(String configFile) throws ConfigurationException {							}		public int getConnectTimeout() {		return connectTimeout;	}	@SuppressWarnings("static-access")	public void setConnectTimeout(int connectTimeout) {		this.connectTimeout = connectTimeout;	}	public int getNetworkTimeout() {		return networkTimeout;	}	@SuppressWarnings("static-access")	public void setNetworkTimeout(int networkTimeout) {		this.networkTimeout = networkTimeout;	}	public List<String> getTrackerAddrs() {		return trackerAddrs;	}	@SuppressWarnings("static-access")	public void setTrackerAddrs(List<String> trackerAddrs) {		this.trackerAddrs = trackerAddrs;	}	public GenericKeyedObjectPoolConfig getTrackerClientPoolConfig(){		GenericKeyedObjectPoolConfig poolConfig = new GenericKeyedObjectPoolConfig();		poolConfig.setMaxIdlePerKey(50);		poolConfig.setMaxTotal(1000);		poolConfig.setMaxTotalPerKey(50);		poolConfig.setMinEvictableIdleTimeMillis(1000*3l);		return poolConfig;	}		public GenericKeyedObjectPoolConfig getStorageClientPoolConfig(){		GenericKeyedObjectPoolConfig poolConfig = new GenericKeyedObjectPoolConfig();		return poolConfig;	}}