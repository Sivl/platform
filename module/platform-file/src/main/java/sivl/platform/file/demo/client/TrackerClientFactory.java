package sivl.platform.file.demo.client;import java.io.IOException;import org.apache.commons.pool2.KeyedPooledObjectFactory;import org.apache.commons.pool2.PooledObject;import org.apache.commons.pool2.impl.DefaultPooledObject;import sivl.platform.file.demo.FastdfsClientConfig;/** *  * 主要功能：TrackerClient工厂类 * @author liuli * @creationDate 2015年5月22日 下午2:48:15 */public class TrackerClientFactory implements KeyedPooledObjectFactory<String,TrackerClient> {		private Integer connectTimeout = FastdfsClientConfig.DEFAULT_CONNECT_TIMEOUT * 1000;	private Integer networkTimeout = FastdfsClientConfig.DEFAULT_NETWORK_TIMEOUT * 1000;	public TrackerClientFactory() {			}	/**	 * 	 * @author liuli	 * @creationDate 2015年5月22日 下午2:48:30	 * @param connectTimeout 连接时间（秒为单位）	 * @param networkTimeout	 */	public TrackerClientFactory(int connectTimeout, int networkTimeout) {		this.connectTimeout = connectTimeout*1000;		this.networkTimeout = networkTimeout*1000;	}	@Override	public PooledObject<TrackerClient> makeObject(String key){		TrackerClient trackerClient = new TrackerClientImpl(key,connectTimeout,networkTimeout);		PooledObject<TrackerClient> pooledTrackerClient = new DefaultPooledObject<TrackerClient>(trackerClient);		return pooledTrackerClient;	}	@Override	public void destroyObject(String key, PooledObject<TrackerClient> pooledTrackerClient) throws IOException{		TrackerClient trackerClient = pooledTrackerClient.getObject();		trackerClient.close();	}	@Override	public boolean validateObject(String key, PooledObject<TrackerClient> p) {		// TODO Auto-generated method stub		return true;	}	@Override	public void activateObject(String key, PooledObject<TrackerClient> p)			throws Exception {		// TODO Auto-generated method stub			}	@Override	public void passivateObject(String key, PooledObject<TrackerClient> p)			throws Exception {		// TODO Auto-generated method stub			}		}