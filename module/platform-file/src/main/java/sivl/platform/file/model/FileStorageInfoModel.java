package sivl.platform.file.model;import java.util.Date;import sivl.platform.file.cmd.AbstractCmd;import sivl.platform.file.utils.BityUtils;/** * 文件存储信息载体 * 目的： * @author lixuefeng * @date 2016年1月7日 * @version 1.0 */public class FileStorageInfoModel {		protected byte status;	protected String id;	protected String ipAddr;	protected String domainName; // http domain name	protected String srcIpAddr;	protected String version;	protected Date joinTime; // storage join timestamp (create timestamp)	protected Date upTime; // storage service started timestamp	protected long totalMB; // total disk storage in MB	protected long freeMB; // free disk storage in MB		protected int uploadPriority; // upload priority	protected int storePathCount; // store base path count of each storage	protected int subdirCountPerPath;	protected int currentWritePath; // current write path index	protected int storagePort;	protected int storageHttpPort; // storage http server port		protected long totalUploadCount;	protected long successUploadCount;	protected long totalAppendCount;	protected long successAppendCount;	protected long totalModifyCount;	protected long successModifyCount;	protected long totalTruncateCount;	protected long successTruncateCount;	protected long totalSetMetaCount;	protected long successSetMetaCount;	protected long totalDeleteCount;	protected long successDeleteCount;	protected long totalDownloadCount;	protected long successDownloadCount;	protected long totalGetMetaCount;	protected long successGetMetaCount;	protected long totalCreateLinkCount;	protected long successCreateLinkCount;	protected long totalDeleteLinkCount;	protected long successDeleteLinkCount;	protected long totalUploadBytes;	protected long successUploadBytes;	protected long totalAppendBytes;	protected long successAppendBytes;	protected long totalModifyBytes;	protected long successModifyBytes;	protected long totalDownloadloadBytes;	protected long successDownloadloadBytes;	protected long totalSyncInBytes;	protected long successSyncInBytes;	protected long totalSyncOutBytes;	protected long successSyncOutBytes;	protected long totalFileOpenCount;	protected long successFileOpenCount;	protected long totalFileReadCount;	protected long successFileReadCount;	protected long totalFileWriteCount;	protected long successFileWriteCount;		protected Date lastSourceUpdate;	protected Date lastSyncUpdate;	protected Date lastSyncedTimestamp;	protected Date lastHeartBeatTime;	protected boolean ifTrunkServer;	public final static int BYTE_SIZE = 600;		public FileStorageInfoModel(byte[] data,int offset) {		status = data[offset];		offset += 1;		id = new String(data, offset, AbstractCmd.FDFS_STORAGE_ID_MAX_SIZE).trim();		offset += AbstractCmd.FDFS_STORAGE_ID_MAX_SIZE;		ipAddr = new String(data, offset, AbstractCmd.FDFS_IPADDR_SIZE).trim();		offset +=  AbstractCmd.FDFS_IPADDR_SIZE;		domainName = new String(data, offset, AbstractCmd.FDFS_DOMAIN_NAME_MAX_SIZE).trim();		offset +=  AbstractCmd.FDFS_DOMAIN_NAME_MAX_SIZE;		srcIpAddr = new String(data, offset, AbstractCmd.FDFS_IPADDR_SIZE).trim();		offset +=  AbstractCmd.FDFS_IPADDR_SIZE;		version = new String(data, offset, AbstractCmd.FDFS_VERSION_SIZE).trim();		offset += AbstractCmd.FDFS_VERSION_SIZE;		joinTime = new Date(BityUtils.buff2long(data, offset) * 1000);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		upTime  = new Date(BityUtils.buff2long(data, offset) * 1000);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalMB = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		freeMB = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		uploadPriority = (int) BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		storePathCount = (int) BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		subdirCountPerPath = (int) BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		currentWritePath = (int) BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		storagePort = (int) BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		storageHttpPort = (int) BityUtils.buff2long(data, offset);				offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalUploadCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successUploadCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalAppendCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successAppendCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalModifyCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successModifyCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalTruncateCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successTruncateCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalSetMetaCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successSetMetaCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalDeleteCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successDeleteCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalDownloadCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successDownloadCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalGetMetaCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successGetMetaCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalCreateLinkCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successCreateLinkCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalDeleteLinkCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successDeleteLinkCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalUploadBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successUploadBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalAppendBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successAppendBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalModifyBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successModifyBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalDownloadloadBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successDownloadloadBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalSyncInBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successSyncInBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalSyncOutBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successSyncOutBytes = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalFileOpenCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successFileOpenCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalFileReadCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successFileReadCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		totalFileWriteCount = BityUtils.buff2long(data, offset);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		successFileWriteCount = BityUtils.buff2long(data, offset);				offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		lastSourceUpdate  = new Date(BityUtils.buff2long(data, offset) * 1000);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		lastSyncUpdate  = new Date(BityUtils.buff2long(data, offset) * 1000);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		lastSyncedTimestamp  = new Date(BityUtils.buff2long(data, offset) * 1000);		offset += AbstractCmd.FDFS_PROTO_PKG_LEN_SIZE;		lastHeartBeatTime  = new Date(BityUtils.buff2long(data, offset) * 1000);				ifTrunkServer = (data[offset] != 0);	}			public byte getStatus() {		return status;	}	public void setStatus(byte status) {		this.status = status;	}	public String getId() {		return id;	}	public void setId(String id) {		this.id = id;	}	public String getIpAddr() {		return ipAddr;	}	public void setIpAddr(String ipAddr) {		this.ipAddr = ipAddr;	}	public String getSrcIpAddr() {		return srcIpAddr;	}	public void setSrcIpAddr(String srcIpAddr) {		this.srcIpAddr = srcIpAddr;	}	public String getDomainName() {		return domainName;	}	public void setDomainName(String domainName) {		this.domainName = domainName;	}	public String getVersion() {		return version;	}	public void setVersion(String version) {		this.version = version;	}	public long getTotalMB() {		return totalMB;	}	public void setTotalMB(long totalMB) {		this.totalMB = totalMB;	}	public long getFreeMB() {		return freeMB;	}	public void setFreeMB(long freeMB) {		this.freeMB = freeMB;	}	public int getUploadPriority() {		return uploadPriority;	}	public void setUploadPriority(int uploadPriority) {		this.uploadPriority = uploadPriority;	}	public Date getJoinTime() {		return joinTime;	}	public void setJoinTime(Date joinTime) {		this.joinTime = joinTime;	}	public Date getUpTime() {		return upTime;	}	public void setUpTime(Date upTime) {		this.upTime = upTime;	}	public int getStorePathCount() {		return storePathCount;	}	public void setStorePathCount(int storePathCount) {		this.storePathCount = storePathCount;	}	public int getSubdirCountPerPath() {		return subdirCountPerPath;	}	public void setSubdirCountPerPath(int subdirCountPerPath) {		this.subdirCountPerPath = subdirCountPerPath;	}	public int getStoragePort() {		return storagePort;	}	public void setStoragePort(int storagePort) {		this.storagePort = storagePort;	}	public int getStorageHttpPort() {		return storageHttpPort;	}	public void setStorageHttpPort(int storageHttpPort) {		this.storageHttpPort = storageHttpPort;	}	public int getCurrentWritePath() {		return currentWritePath;	}	public void setCurrentWritePath(int currentWritePath) {		this.currentWritePath = currentWritePath;	}	public long getTotalUploadCount() {		return totalUploadCount;	}	public void setTotalUploadCount(long totalUploadCount) {		this.totalUploadCount = totalUploadCount;	}	public long getSuccessUploadCount() {		return successUploadCount;	}	public void setSuccessUploadCount(long successUploadCount) {		this.successUploadCount = successUploadCount;	}	public long getTotalAppendCount() {		return totalAppendCount;	}	public void setTotalAppendCount(long totalAppendCount) {		this.totalAppendCount = totalAppendCount;	}	public long getSuccessAppendCount() {		return successAppendCount;	}	public void setSuccessAppendCount(long successAppendCount) {		this.successAppendCount = successAppendCount;	}	public long getTotalModifyCount() {		return totalModifyCount;	}	public void setTotalModifyCount(long totalModifyCount) {		this.totalModifyCount = totalModifyCount;	}	public long getSuccessModifyCount() {		return successModifyCount;	}	public void setSuccessModifyCount(long successModifyCount) {		this.successModifyCount = successModifyCount;	}	public long getTotalTruncateCount() {		return totalTruncateCount;	}	public void setTotalTruncateCount(long totalTruncateCount) {		this.totalTruncateCount = totalTruncateCount;	}	public long getSuccessTruncateCount() {		return successTruncateCount;	}	public void setSuccessTruncateCount(long successTruncateCount) {		this.successTruncateCount = successTruncateCount;	}	public long getTotalSetMetaCount() {		return totalSetMetaCount;	}	public void setTotalSetMetaCount(long totalSetMetaCount) {		this.totalSetMetaCount = totalSetMetaCount;	}	public long getSuccessSetMetaCount() {		return successSetMetaCount;	}	public void setSuccessSetMetaCount(long successSetMetaCount) {		this.successSetMetaCount = successSetMetaCount;	}	public long getTotalDeleteCount() {		return totalDeleteCount;	}	public void setTotalDeleteCount(long totalDeleteCount) {		this.totalDeleteCount = totalDeleteCount;	}	public long getSuccessDeleteCount() {		return successDeleteCount;	}	public void setSuccessDeleteCount(long successDeleteCount) {		this.successDeleteCount = successDeleteCount;	}	public long getTotalDownloadCount() {		return totalDownloadCount;	}	public void setTotalDownloadCount(long totalDownloadCount) {		this.totalDownloadCount = totalDownloadCount;	}	public long getSuccessDownloadCount() {		return successDownloadCount;	}	public void setSuccessDownloadCount(long successDownloadCount) {		this.successDownloadCount = successDownloadCount;	}	public long getTotalGetMetaCount() {		return totalGetMetaCount;	}	public void setTotalGetMetaCount(long totalGetMetaCount) {		this.totalGetMetaCount = totalGetMetaCount;	}	public long getSuccessGetMetaCount() {		return successGetMetaCount;	}	public void setSuccessGetMetaCount(long successGetMetaCount) {		this.successGetMetaCount = successGetMetaCount;	}	public long getTotalCreateLinkCount() {		return totalCreateLinkCount;	}	public void setTotalCreateLinkCount(long totalCreateLinkCount) {		this.totalCreateLinkCount = totalCreateLinkCount;	}	public long getSuccessCreateLinkCount() {		return successCreateLinkCount;	}	public void setSuccessCreateLinkCount(long successCreateLinkCount) {		this.successCreateLinkCount = successCreateLinkCount;	}	public long getTotalDeleteLinkCount() {		return totalDeleteLinkCount;	}	public void setTotalDeleteLinkCount(long totalDeleteLinkCount) {		this.totalDeleteLinkCount = totalDeleteLinkCount;	}	public long getSuccessDeleteLinkCount() {		return successDeleteLinkCount;	}	public void setSuccessDeleteLinkCount(long successDeleteLinkCount) {		this.successDeleteLinkCount = successDeleteLinkCount;	}	public long getTotalUploadBytes() {		return totalUploadBytes;	}	public void setTotalUploadBytes(long totalUploadBytes) {		this.totalUploadBytes = totalUploadBytes;	}	public long getSuccessUploadBytes() {		return successUploadBytes;	}	public void setSuccessUploadBytes(long successUploadBytes) {		this.successUploadBytes = successUploadBytes;	}	public long getTotalAppendBytes() {		return totalAppendBytes;	}	public void setTotalAppendBytes(long totalAppendBytes) {		this.totalAppendBytes = totalAppendBytes;	}	public long getSuccessAppendBytes() {		return successAppendBytes;	}	public void setSuccessAppendBytes(long successAppendBytes) {		this.successAppendBytes = successAppendBytes;	}	public long getTotalModifyBytes() {		return totalModifyBytes;	}	public void setTotalModifyBytes(long totalModifyBytes) {		this.totalModifyBytes = totalModifyBytes;	}	public long getSuccessModifyBytes() {		return successModifyBytes;	}	public void setSuccessModifyBytes(long successModifyBytes) {		this.successModifyBytes = successModifyBytes;	}	public long getTotalDownloadloadBytes() {		return totalDownloadloadBytes;	}	public void setTotalDownloadloadBytes(long totalDownloadloadBytes) {		this.totalDownloadloadBytes = totalDownloadloadBytes;	}	public long getSuccessDownloadloadBytes() {		return successDownloadloadBytes;	}	public void setSuccessDownloadloadBytes(long successDownloadloadBytes) {		this.successDownloadloadBytes = successDownloadloadBytes;	}	public long getTotalSyncInBytes() {		return totalSyncInBytes;	}	public void setTotalSyncInBytes(long totalSyncInBytes) {		this.totalSyncInBytes = totalSyncInBytes;	}	public long getSuccessSyncInBytes() {		return successSyncInBytes;	}	public void setSuccessSyncInBytes(long successSyncInBytes) {		this.successSyncInBytes = successSyncInBytes;	}	public long getTotalSyncOutBytes() {		return totalSyncOutBytes;	}	public void setTotalSyncOutBytes(long totalSyncOutBytes) {		this.totalSyncOutBytes = totalSyncOutBytes;	}	public long getSuccessSyncOutBytes() {		return successSyncOutBytes;	}	public void setSuccessSyncOutBytes(long successSyncOutBytes) {		this.successSyncOutBytes = successSyncOutBytes;	}	public long getTotalFileOpenCount() {		return totalFileOpenCount;	}	public void setTotalFileOpenCount(long totalFileOpenCount) {		this.totalFileOpenCount = totalFileOpenCount;	}	public long getSuccessFileOpenCount() {		return successFileOpenCount;	}	public void setSuccessFileOpenCount(long successFileOpenCount) {		this.successFileOpenCount = successFileOpenCount;	}	public long getTotalFileReadCount() {		return totalFileReadCount;	}	public void setTotalFileReadCount(long totalFileReadCount) {		this.totalFileReadCount = totalFileReadCount;	}	public long getSuccessFileReadCount() {		return successFileReadCount;	}	public void setSuccessFileReadCount(long successFileReadCount) {		this.successFileReadCount = successFileReadCount;	}	public long getTotalFileWriteCount() {		return totalFileWriteCount;	}	public void setTotalFileWriteCount(long totalFileWriteCount) {		this.totalFileWriteCount = totalFileWriteCount;	}	public long getSuccessFileWriteCount() {		return successFileWriteCount;	}	public void setSuccessFileWriteCount(long successFileWriteCount) {		this.successFileWriteCount = successFileWriteCount;	}	public Date getLastSourceUpdate() {		return lastSourceUpdate;	}	public void setLastSourceUpdate(Date lastSourceUpdate) {		this.lastSourceUpdate = lastSourceUpdate;	}	public Date getLastSyncUpdate() {		return lastSyncUpdate;	}	public void setLastSyncUpdate(Date lastSyncUpdate) {		this.lastSyncUpdate = lastSyncUpdate;	}	public Date getLastSyncedTimestamp() {		return lastSyncedTimestamp;	}	public void setLastSyncedTimestamp(Date lastSyncedTimestamp) {		this.lastSyncedTimestamp = lastSyncedTimestamp;	}	public Date getLastHeartBeatTime() {		return lastHeartBeatTime;	}	public void setLastHeartBeatTime(Date lastHeartBeatTime) {		this.lastHeartBeatTime = lastHeartBeatTime;	}	public boolean isIfTrunkServer() {		return ifTrunkServer;	}	public void setIfTrunkServer(boolean ifTrunkServer) {		this.ifTrunkServer = ifTrunkServer;	}		}