###########################################################
#日志配置
#输出级别的种类：ERROR、WARN、INFO、DEBUG
#日志信息输出目的地：
#1.org.apache.log4j.ConsoleAppender（控制台）
#2.org.apache.log4j.FileAppender（文件）
#3.org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#4.org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#5.org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#日志信息的格式：
#1.org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#2.org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#3.org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
#4.org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#控制台选项
#Threshold=DEBUG:指定日志消息的输出最低层次。
#ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
#Target=System.err：默认情况下是：System.out,指定输出控制台
#FileAppender 选项
#Threshold=DEBUF:指定日志消息的输出最低层次。
#ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
#File=mylog.txt:指定消息输出到mylog.txt文件。
#Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。
#RollingFileAppender 选项
#Threshold=DEBUG:指定日志消息的输出最低层次。
#ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
#File=mylog.txt:指定消息输出到mylog.txt文件。
#Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。
#MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。
#MaxBackupIndex=2:指定可以产生的滚动文件的最大数。
#log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n
#格式中几个符号所代表的含义：
# -X号: X信息输出时左对齐；
#  %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,
#  %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#  %r: 输出自应用启动到输出该log信息耗费的毫秒数
#  %c: 输出日志信息所属的类目，通常就是所在类的全名
#  %t: 输出产生该日志事件的线程名
#  %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)
#  %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
#  %%: 输出一个"%"字符
#  %F: 输出日志消息产生时所在的文件名称
#  %L: 输出代码中的行号
#  %m: 输出代码中指定的消息,产生的日志具体信息
#  %n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行
###########################################################
log4j.rootLogger=INFO,CONSOLE,A1

#控制台日志输出
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=INFO
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Encoding=UTF-8  
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout  
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyy-MM-dd HH:mm:ss,SSS} [%t] %-5p %c(%L) - %m%n

#每天日志文件回滚
log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender  
log4j.appender.A1.Threshold=WARN  
log4j.appender.A1.File=C:/log4j/warn.log
log4j.appender.A1.Encoding=UTF-8  
log4j.appender.A1.MaxFileSize=6MB
log4j.appender.A1.DatePattern='.'yyyy-MM-dd  
log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
log4j.appender.A1.layout.ConversionPattern=%d{yyy-MM-dd HH:mm:ss,SSS} [%t] %-5p %c(%L) - %m%n

#druid日志输出
log4j.logger.druid.sql=INFO,CONSOLE,A2
log4j.logger.druid.sql.DataSource=INFO,CONSOLE,A2
log4j.logger.druid.sql.Connection=INFO,CONSOLE,A2
log4j.logger.druid.sql.Statement=INFO,CONSOLE,A2
log4j.logger.druid.sql.ResultSet=INFO,CONSOLE,A2

#druid日志每天日志文件回滚
log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender  
log4j.appender.A2.Threshold=WARN  
log4j.appender.A2.File=C:/log4j/druid_sql.log
log4j.appender.A2.Encoding=UTF-8  
log4j.appender.A2.MaxFileSize=6MB
log4j.appender.A2.DatePattern='.'yyyy-MM-dd  
log4j.appender.A2.layout=org.apache.log4j.PatternLayout  
log4j.appender.A2.layout.ConversionPattern=%d{yyy-MM-dd HH:mm:ss,SSS} [%t] %-5p %c(%L) - %m%n

#自定义日志输出
log4j.category.org.springframework=INFO
